Java接口JTA(机构名)允许Java环境完成分布式交易，跨越多个XA资源。它遵循JSR 907规范，提供事务监控器来协调数据库和消息队列等资源的事务。每个资源有自己的管理器，如JDBC，资源适配器协调分布式事务。应用通过资源API与资源交互进行修改。JTA(机构名) API包括Java包中的类。JTA(机构名)基于XA结构，定义了两种事务边界API，供EJB(机构名)服务器和应用组件使用。JTA(机构名)规范要求每个资源实现特定接口。Java事务接口由UserTransaction接口等组成，允许应用程序控制事务范围，适用于Java客户端或EJB(机构名)。begin方法启动全局事务并与线程绑定。事务与线程的管理由事务管理者负责，对应用程序透明。嵌套事务不是必需的。若线程环境与事务关联，但事务管理者不支持嵌套事务，调用begin方法将引发异常。

底层事务管理者负责在不同应用间传播事务上下文，位于客户端和服务器上。事务上下文的传播由客户端和服务器协商确定。若事务管理者遵照JTS规范，则是采用CORBA OTS 1.1规范描述的事务上下文传播格式。这一传播过程对应用程序来说是透明的。企业JavaBeans服务器需要支持用户事务接口，以便Bean对象管理事务。EJB组件通过EJB上下文的getUserTransaction方法获取用户事务接口，无需直接与事务管理器交互，依赖EJB服务器的事务处理。EJB服务器与事务管理器的交互对应用是透明的。以对话形式说明会话Bean对象如何使用用户事务来管理事务。若环境中安装了Java事务API的实现，可从相关位置获取用户事务接口。Java应用程序使用Java事务API或用户事务的功能时，应用服务器并非必需。Java应用程序可以利用独立的Java事务API实现，该实现基于Java事务API/XA的可靠性。使用Spring工具时，提供了多种开发可靠Java应用程序的方法。

到2010年4月，Java事务API的开放源代码实现有：以上所有事务管理器都可以在Java 2平台标准版环境中使用。

