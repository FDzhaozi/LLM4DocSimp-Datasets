NVIDIA推出的统一计算架构（CUDA）技术，是该公司对通用计算GPU的正式名称。该产品支持GeForce 8系列及更新的GPU和较新的Quadro GPU进行计算。它还首次允许将GPU用作C编译器的开发环境。NVIDIA(机构名)在推广时经常将编译器和架构(框架结构)混合宣传，造成了一些混乱。实际上，CUDA可以与开放计算语言兼容或使用自家的C编译器。无论是CUDA C语言还是开放计算语言，指令最终都会被驱动程序转换为PTX代码，由显卡核心计算。以GeForce 8800 GTX为例，其核心有128个核心处理器。利用CUDA技术，可以将这些核心处理器连接起来，作为线程处理单元去处理数据密集型计算。各个核心处理器可以交换、同步和共享数据。通过NVIDIA(机构名)的C编译器和驱动程序，可以充分利用这些功能。它还可以作为流处理器，让应用程序进行运算。GeForce 8800 GTX显卡的计算能力可达520GFlops，如果使用SLI配置，可以达到1TFlops。

程序员在使用CUDA技术时需区分三种存储器，并应对复杂的线程层次。编译器难以自动完成任务，这增加了开发难度。未来的G100显卡将采用第二代CUDA架构(框架结构)，提高效率，降低开发难度。

目前，一些软件厂商使用CUDA(机构名)技术开发了Adobe Premiere Pro的插件。这些插件能利用显卡加速H.264/MPEG-4 AVC编码速度，速度约是只用CPU的7倍。NVIDIA收购AGEIA后获得PhysX物理加速技术，该技术与CUDA结合使显卡具备物理加速芯片功能。目前，所有GeForce 8系列显卡都支持CUDA。NVIDIA将不再推出物理加速卡，显卡将替代这些产品。为了推广CUDA(机构名)到民用，NVIDIA(机构名)举办了编程(编制程序)比赛，要求开发者利用CUDA(机构名)的潜力。要让GPGPU普及，还需看微软(机构名)是否能在Windows操作系统提供相应的编程(编制程序)接口。2008年8月，NVIDIA发布了CUDA 2.0；2010年3月22日，发布了CUDA 3.0。这两个版本只支持Fermi架构及以后的版本。CUDA由NVIDIA提出并实现。它允许程序开发人员直接访问GPU的虚拟指令集和并行计算资源。

使用CUDA技术，GPU不仅可以用于图形处理，还能进行通用处理，这种技术叫GPGPU。与CPU不同，GPU擅长并行处理大量任务，而不是快速处理单个任务。软件开发者可以通过CUDA加速库、编译器指令（如OpenACC）和C、C++、Fortran等工业标准编程语言扩展CUDA平台的使用。C/C++开发者用CUDA C/C++或NVIDIA的NVCC编译器，Fortran开发者用CUDA Fortran或PGI公司的CUDA Fortran编译器进行编译。CUDA平台还支持其他计算接口，如Khronos Group的OpenCL、Microsoft的DirectCompute和C++AMP。其他语言如Python、Perl、Java、Ruby、Lua、Haskell、MATLAB、IDL及Mathematica也有原生支持。在电脑游戏行业，GPU不仅用于图形渲染，还用于物理运算，如PhysX和Bullet。在计算生物学和密码学等非图形应用中，CUDA的加速效果非常显著，效果可以用数量大小来衡量。

并行计算平台同时提供基础和高级API。最初的CUDA(机构名)软件开发包（SDK）在2007年2月15日发布，支持Windows和Linux系统。后来在第二版中增加了对苹果操作系统的支持，取代了2008年2月14日发布的测试版。所有G8x系列及以后的NVIDIA(机构名)图形处理单元都支持CUDA(机构名)技术，包括GeForce、Quadro和Tesla系列。CUDA(机构名)与大多数标准操作系统兼容。Nvidia表示，基于G8x系列开发的程序具备二进制兼容性，将来能在所有Nvidia显卡上直接运行，无需修改。CUDA技术配合MediaCoder等软件，能加速高清视频编码，这在GPU上进行传统通用计算时尤为显著。在视频解码方面，同样可以利用CUDA(机构名)技术。此前，NVIDIA(机构名)的显示核心已经集成了PureVideo单元。但微软的DXVA视频加速API有时会有加速失效问题。因此，使用CoreAVC和CUDA(机构名)可以在显示核心上实现软件解码，解决兼容性问题。此外，配合适当的引擎，显示核心还可以进行光线追踪计算。NVIDIA(机构名)推出了Optix光线追踪引擎，通过CUDA(机构名)技术利用GPU进行光线追踪。

所有基于G80及之后架构(框架结构)的民用和专业显卡或计算模块都支持CUDA(机构名)技术。以下是用C++从GPU的图像数组中获取纹理映射的示例：下面的例子是使用Python语言改写的。Python语言的相关信息可以来自PyCUDA(人名)库。更多的Python语言矩阵乘法问题可以来自pycublas库。

