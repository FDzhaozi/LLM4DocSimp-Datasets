[
    {
        "simp_type": [
            "拆分"
        ],
        "simplified_text": "NVIDIA推出的统一计算架构CUDA技术，是对通用计算GPU的正式名称。该产品支持GeForce 8系列及更新的GPU和较新的Quadro GPU进行计算，并首次允许GPU用作C编译器的开发环境。\n\n 然而，NVIDIA在推广时经常将编译器和架构混合宣传，造成了一些混乱。实际上，CUDA可以与开放计算语言兼容或使用自家的C编译器。CUDA C语言和开放计算语言的指令最终会被驱动程序转换为PTX代码，由显卡核心计算。\n\n 以GeForce 8800 GTX为例，其核心有128个核心处理器。CUDA技术可以将这些核心处理器连接起来，作为线程处理单元处理数据密集型计算。核心处理器可以交换、同步和共享数据。通过NVIDIA的C编译器和驱动程序，可以充分利用这些功能。CUDA技术还允许GeForce 8800 GTX显卡作为流处理器，让应用程序进行运算。GeForce 8800 GTX的计算能力可达520GFlops，使用SLI配置可达1TFlops。",
        "original": "NVIDIA(机构名)推出的统一计算架构(框架结构)（CUDA）技术，是该公司对通用计算GPU的正式名称。该产品支持GeForce 8系列及更新的GPU和较新的Quadro GPU进行计算。它还首次允许将GPU用作C编译器的开发环境。NVIDIA(机构名)(机构名)在推广时经常将编译器和架构(框架结构)(框架结构)混合宣传，造成了一些混乱。实际上，CUDA可以与开放计算语言兼容或使用自家的C编译器。无论是CUDA C语言还是开放计算语言，指令最终都会被驱动程序转换为PTX代码，由显卡核心计算。以GeForce 8800 GTX为例，其核心有128个核心处理器。利用CUDA技术，可以将这些核心处理器连接起来，作为线程处理单元去处理数据密集型计算。各个核心处理器可以交换、同步和共享数据。通过NVIDIA(机构名)(机构名)的C编译器和驱动程序，可以充分利用这些功能。它还可以作为流处理器，让应用程序进行运算。GeForce 8800 GTX显卡的计算能力可达520GFlops，如果使用SLI配置，可以达到1TFlops。",
        "version": 2,
        "chunk_num": 1,
        "type": "Wiki"
    },
    {
        "simp_type": [
            "拆分",
            "组合",
            "添加过渡"
        ],
        "simplified_text": "程序员在使用CUDA技术时需区分三种存储器，并应对复杂的线程层次。这增加了开发难度，因为编译器难以自动完成任务。未来，G100显卡将采用第二代CUDA架构，旨在提高效率并降低开发难度。\n\n   一些软件厂商已使用CUDA技术开发了Adobe Premiere Pro的插件，这些插件能显著加速H.264/MPEG-4 AVC编码速度，速度可达仅用CPU的7倍。NVIDIA通过收购AGEIA获得了PhysX物理加速技术，结合CUDA后，显卡拥有了物理加速芯片的功能。\n\n   目前，所有GeForce 8系列显卡都支持CUDA。NVIDIA将不再推出物理加速卡，显卡将替代这些产品。为了推广CUDA到民用，NVIDIA举办了编程比赛，鼓励开发者利用CUDA的潜力。\n\n   微软是否能在Windows操作系统提供相应的编程接口，是GPGPU普及的关键。NVIDIA于2008年8月发布了CUDA 2.0，2010年3月22日发布了CUDA 3.0，这两个版本只支持Fermi架构及以后的版本。CUDA由NVIDIA提出并实现，它允许程序开发人员直接访问GPU的虚拟指令集和计算资源。",
        "original": "程序员在使用CUDA技术时需区分三种存储器，并应对复杂的线程层次。编译器难以自动完成任务，这增加了开发难度。未来的G100显卡将采用第二代CUDA架构(框架结构)，提高效率，降低开发难度。目前，一些软件厂商使用CUDA技术开发了Adobe Premiere Pro的插件。这些插件能利用显卡加速H.264/MPEG-4 AVC编码速度，速度约是只用CPU的7倍。NVIDIA收购AGEIA后，获得了PhysX物理加速技术。这一技术与CUDA结合，使得显卡拥有了物理加速芯片的功能。目前，所有GeForce 8系列显卡都支持CUDA。NVIDIA(机构名)将不再推出物理加速卡，显卡将替代这些产品。为了推广CUDA到民用，NVIDIA(机构名)举办了编程(编制程序)比赛，要求开发者利用CUDA的潜力。要让GPGPU普及，还需看微软(机构名)是否能在Windows操作系统提供相应的编程(编制程序)接口。2008年8月，NVIDIA(机构名)发布了CUDA 2.0；2010年3月22日，发布了CUDA 3.0。这两个版本只支持Fermi架构(框架结构)及以后的版本。CUDA由NVIDIA(机构名)提出并实现。它允许程序开发人员直接访问GPU的虚拟指令集和计算资源。",
        "version": 2,
        "chunk_num": 2,
        "type": "Wiki"
    },
    {
        "simp_type": [
            "拆分",
            "添加过渡"
        ],
        "simplified_text": "使用CUDA技术，GPU不仅可以用于图形处理，还能进行通用处理，这种技术称为GPGPU。与擅长快速处理单个任务的CPU不同，GPU擅长同时进行大量任务。\n\n 软件开发者可以通过CUDA加速库、OpenACC等编译器指令以及C、C++、Fortran等工业标准编程语言来扩展CUDA平台的使用。例如，C/C++开发者使用CUDA C/C++或NVIDIA的NVCC编译器，Fortran开发者使用CUDA Fortran或PGI公司的CUDA Fortran编译器进行编译。\n\n CUDA平台还支持其他计算接口，如Khronos Group的OpenCL、Microsoft的DirectCompute和C++AMP。其他语言如Python、Perl、Java、Ruby、Lua、Haskell、MATLAB、IDL及Mathematica也有原生支持。\n\n 在电脑游戏行业，GPU不仅用于图形渲染，还用于物理运算，如PhysX和Bullet。在计算生物学和密码学等非图形应用中，CUDA的加速效果非常明显，效果可以用数量大小来衡量。",
        "original": "使用CUDA技术，GPU(机构名)不仅可以用于图形处理，还能进行通用处理，这种技术叫GPGPU(机构名)。与CPU(机构名)不同，GPU(机构名)擅长同时进行大量任务，而不是快速处理单个任务。软件开发者可以通过CUDA加速库、OpenACC等编译器指令以及C、C++、Fortran等工业标准编程语言来扩展CUDA平台的使用。C/C++开发者使用CUDA C/C++或NVIDIA的NVCC编译器，Fortran开发者使用CUDA Fortran或PGI公司的CUDA Fortran编译器进行编译。CUDA平台还支持其他计算接口，如Khronos Group的OpenCL、Microsoft(机构名)的DirectCompute和C++AMP。其他语言如Python、Perl、Java、Ruby、Lua、Haskell、MATLAB、IDL及Mathematica也有原生支持。在电脑游戏行业，GPU(机构名)不仅用于图形渲染，还用于物理运算，如PhysX和Bullet。在计算生物学和密码学等非图形应用中，CUDA的加速效果非常明显，效果可以用数量大小来衡量。",
        "version": 2,
        "chunk_num": 3,
        "type": "Wiki"
    },
    {
        "simp_type": [
            "拆分",
            "添加过渡"
        ],
        "simplified_text": "计算平台提供了基础和高级API。CUDA（机构名）软件开发包首次于2007年2月15日发布，支持Windows和Linux系统。后来，第二版增加了对苹果操作系统的支持，并替换了2008年2月14日发布的测试版。\n\n  所有G8x系列及以后的NVIDIA（机构名）图形处理单元都支持CUDA（机构名）技术，包括GeForce、Quadro和Tesla系列。CUDA（机构名）与大多数标准操作系统兼容。Nvidia宣布，G8x系列开发的程序具有二进制兼容性，未来将能在所有Nvidia显卡上直接运行，无需修改。\n\n  CUDA（机构名）技术配合MediaCoder等软件，能加速高清视频编码，这在GPU上进行传统通用计算时特别明显。同样，在视频解码方面，CUDA（机构名）技术也有应用。此前，NVIDIA（机构名）的显示核心已集成PureVideo单元。然而，微软（机构名）的DXVA视频加速API有时会有加速失效问题。因此，使用CoreAVC和CUDA（机构名）可以在显示核心上实现软件解码，解决兼容性问题。\n\n  此外，配合适当的引擎，显示核心还可以进行光线追踪计算。NVIDIA（机构名）推出的Optix光线追踪引擎，正是通过CUDA（机构名）技术利用GPU进行光线追踪。",
        "original": "同时计算平台提供基础和高级API。最初的CUDA(机构名)软件开发包在2007年2月15日发布，支持Windows和Linux系统。后来在第二版中增加了对苹果操作系统的支持，替换了2008年2月14日发布的测试版。所有G8x系列及以后的NVIDIA(机构名)图形处理单元都支持CUDA(机构名)技术，包括GeForce、Quadro和Tesla系列。CUDA(机构名)与大多数标准操作系统兼容。Nvidia表示，G8x系列开发的程序具有二进制兼容性，未来将能在所有Nvidia显卡上直接运行，无需修改。CUDA(机构名)技术配合MediaCoder等软件，能加速高清视频编码，这在GPU上进行传统通用计算时特别明显。在视频解码方面，同样可以利用CUDA(机构名)技术。此前，NVIDIA(机构名)的显示核心已经集成了PureVideo单元。但微软(机构名)的DXVA视频加速API有时会有加速失效问题。因此，使用CoreAVC和CUDA(机构名)可以在显示核心上实现软件解码，解决兼容性问题。此外，配合适当的引擎，显示核心还可以进行光线追踪计算。NVIDIA(机构名)推出了Optix光线追踪引擎，通过CUDA(机构名)技术利用GPU进行光线追踪。",
        "version": 2,
        "chunk_num": 4,
        "type": "Wiki"
    },
    {
        "simp_type": [
            "拆分"
        ],
        "simplified_text": "所有基于G80及之后架构的民用和专业显卡或计算模块都支持CUDA技术。以下是用C++从GPU图像数组获取纹理映射的示例，该例子是用Python语言改写的。Python语言的相关信息来自PyCUDA。更多的Python语言矩阵乘法问题来自pycublas。",
        "original": "所有基于G80及之后架构(框架结构)(框架结构)的民用和专业显卡或计算模块都支持CUDA(机构名)技术。以下是用C++从GPU图像数组获取纹理映射的示例，该例子是用Python语言改写的。Python语言的相关信息来自PyCUDA。更多的Python语言矩阵乘法问题来自pycublas。",
        "version": 2,
        "chunk_num": 5,
        "type": "Wiki"
    },
    {
        "simp_type": [
            "冗余删除",
            "添加标题"
        ],
        "simplified_text": "## CUDA技术与GeForce GPU的应用\n\nNVIDIA推出的CUDA技术是通用计算GPU的正式名称，支持GeForce 8系列及更新的GPU以及较新的Quadro GPU计算。CUDA首次将GPU应用于C编译器的开发环境。然而，NVIDIA在推广时常常将编译器和架构混为一谈，造成混淆。CUDA可以与开放计算语言兼容，或使用自家的C编译器，其指令最终会被转换为PTX代码，由显卡核心计算。\n\n以GeForce 8800 GTX为例，CUDA技术可以将其核心处理器连接起来，作为线程处理单元处理数据密集型计算，并通过NVIDIA的C编译器和驱动程序充分利用这些功能。CUDA技术还允许GeForce 8800 GTX显卡作为流处理器进行计算，计算能力可达520GFlops，使用SLI配置可达1TFlops。\n\n程序员在使用CUDA技术时需要区分三种存储器，并应对复杂的线程层次，这增加了开发难度。未来，G100显卡将采用第二代CUDA架构，旨在提高效率并降低开发难度。",
        "original": "NVIDIA(机构名)推出的统一计算架构(框架结构)CUDA技术，是通用计算GPU的正式名称。该产品支持GeForce 8系列及更新的GPU以及较新的Quadro GPU计算。它还首次将GPU应用于C编译器的开发环境。然而，NVIDIA(机构名)在推广时经常将编译器和架构(框架结构)混为一谈，造成了一些混乱。实际上，CUDA可以与开放计算语言兼容或使用自家的C编译器。CUDA C语言和开放计算语言的指令最终会被驱动程序转换为PTX代码，由显卡核心计算。以GeForce 8800 GTX为例，其核心有128个核心处理器。CUDA技术可以将这些核心处理器连接起来，作为线程处理单元处理数据密集型计算。核心处理器可以交换、同步和共享数据。通过NVIDIA(机构名)的C编译器和驱动程序，可以充分利用这些功能。CUDA技术还允许GeForce 8800 GTX显卡作为流处理器，让应用程序进行计算。GeForce 8800 GTX的计算能力可达520GFlops，使用SLI配置可达1TFlops。程序员在使用CUDA技术时需要区分三种存储器，并应对复杂的线程层次。这增加了开发难度，因为编译器难以自动完成任务。未来，G100显卡将采用第二代CUDA架构(框架结构)，旨在提高效率并降低开发难度。",
        "version": 3,
        "chunk_num": 1,
        "type": "Wiki"
    },
    {
        "simp_type": [
            "冗余删除",
            "添加标题"
        ],
        "simplified_text": "## CUDA技术与NVIDIA的发展\n\n软件厂商利用CUDA技术开发了Adobe Premiere Pro插件，大幅提升H.264/MPEG-4 AVC编码速度。NVIDIA通过收购AGEIA获得PhysX技术，结合CUDA使显卡具备物理加速功能。GeForce 8系列显卡均支持CUDA。NVIDIA举办编程比赛以推广CUDA，并关注微软在Windows操作系统中的支持。CUDA 2.0和CUDA 3.0支持Fermi架构及以后版本。CUDA允许程序开发人员直接访问GPU资源，实现图形处理和通用处理，即GPGPU。与CPU相比，GPU擅长并行处理大量任务。",
        "original": "一些软件厂商用CUDA技术开发了Adobe Premiere Pro的插件。这些插件能显著提高H.264/MPEG-4 AVC编码速度，速度比仅用CPU(人名)快7倍。NVIDIA(机构名)通过收购AGEIA(机构名)获得了PhysX物理加速技术，结合CUDA后，显卡拥有了物理加速芯片的功能。目前，所有GeForce 8系列显卡都支持CUDA。NVIDIA(机构名)不再推出物理加速卡，显卡要替代这些产品。为了推广CUDA到民用，NVIDIA(机构名)举办了编程(编制程序)比赛，鼓励开发者利用CUDA的潜力。微软是否能在Windows操作系统提供相应的编程(编制程序)接口，是GPGPU普及的关键。NVIDIA(机构名)于2008年8月发布了CUDA 2.0，2010年3月22日发布了CUDA 3.0，这两个版本只支持Fermi架构(框架结构)及以后的版本。CUDA由NVIDIA(机构名)提出并实现，它允许程序开发人员直接访问GPU的虚拟指令集和计算资源。使用CUDA技术，GPU不仅可以用于图形处理，还能进行通用处理，这种技术称为GPGPU。与擅长快速处理单个任务的CPU(人名)不同，GPU擅长同时进行大量任务。",
        "version": 3,
        "chunk_num": 2,
        "type": "Wiki"
    },
    {
        "simp_type": [
            "冗余删除"
        ],
        "simplified_text": "开发者可利用CUDA加速库、OpenACC等指令和C、C++、Fortran等工业标准语言扩展CUDA平台应用。C/C++开发者使用CUDA C/C++或NVCC编译器，Fortran开发者使用CUDA Fortran或PGI公司的CUDA Fortran编译器。CUDA平台也支持OpenCL、DirectCompute和C++AMP等计算接口。Python、Perl、Java、Ruby、Lua、Haskell、MATLAB、IDL及Mathematica等语言也有原生支持。",
        "original": "开发者可以利用CUDA加速库、OpenACC等编译器指令以及C、C++、Fortran等工业标准语言来拓展CUDA平台应用。例如，C/C++开发者使用CUDA C/C++或NVCC编译器，Fortran开发者使用CUDA Fortran或PGI公司的CUDA Fortran编译器进行编译。CUDA平台还支持其他计算接口，如Khronos Group的OpenCL、Microsoft(机构名)的DirectCompute和C++AMP。其他语言如Python、Perl、Java、Ruby、Lua、Haskell、MATLAB、IDL及Mathematica也有原生支持。",
        "version": 3,
        "chunk_num": 3,
        "type": "Wiki"
    },
    {
        "simp_type": [
            "冗余删除",
            "添加标题"
        ],
        "simplified_text": "## CUDA技术概述\n\nGPU在电脑游戏行业不仅用于图形渲染，还用于物理计算。CUDA技术自2007年发布以来，支持Windows、Linux和苹果操作系统，与大多数标准操作系统兼容。G8x系列及以后的NVIDIA图形处理单元均支持CUDA。CUDA技术具有二进制兼容性，未来可在所有Nvidia显卡上直接运行。\n\nCUDA技术配合软件如MediaCoder，可加速高清视频编码和视频解码。此外，使用CUDA可以在显示核心上实现软件解码，解决兼容性问题。",
        "original": "在电脑游戏行业，GPU除了图形渲染，还用于物理计算，如PhysX和Bullet。在计算生物学和密码学等非图形应用中，CUDA加速效果显著，效果可以用数量来衡量。计算平台提供基础和高级API。CUDA软件开发包首次于2007年2月15日发布，支持Windows和Linux系统。后来，第二版增加了对苹果操作系统的支持，并替换了2008年2月14日发布的测试版。所有G8x系列及以后的NVIDIA图形处理单元都支持CUDA技术，包括GeForce、Quadro和Tesla系列。CUDA技术与大多数标准操作系统兼容。Nvidia宣布，G8x系列程序具有二进制兼容性，未来可在所有Nvidia显卡上直接运行，无需修改。CUDA技术配合MediaCoder等软件，能加速高清视频编码，这在GPU上进行传统通用计算时特别明显。同样，在视频解码方面，CUDA技术也有应用。此前，NVIDIA的显示核心已集成PureVideo单元。然而，微软(机构名)的DXVA视频加速API有时会有加速失效问题。因此，使用CoreAVC和CUDA可以在显示核心上实现软件解码，解决兼容性问题。",
        "version": 3,
        "chunk_num": 4,
        "type": "Wiki"
    },
    {
        "simp_type": [
            "冗余删除",
            "添加标题"
        ],
        "simplified_text": "## 光线追踪技术\n\nNVIDIA的Optix光线追踪引擎利用CUDA技术通过GPU实现光线追踪。G80及以上架构的显卡和计算模块均支持CUDA技术。以下是一个使用C++和Python改写的C++代码示例，展示了从GPU图像数组获取纹理映射的过程。PyCUDA库提供了Python语言的相关信息，而pycublas库用于处理更多的Python矩阵乘法问题。",
        "original": "此外，配上合适的引擎，显示核心也能进行光线追踪计算。NVIDIA推出的Optix光线追踪引擎，是利用CUDA技术通过GPU进行光线追踪的。所有基于G80及以上架构(框架结构)的民用和专业显卡或计算模块都支持CUDA技术。以下是用C++从GPU图像数组获取纹理映射的例子，这个例子是用Python语言改写的。Python语言的相关信息来自PyCUDA库。更多的Python矩阵乘法问题来自pycublas库。",
        "version": 3,
        "chunk_num": 5,
        "type": "Wiki"
    }
]