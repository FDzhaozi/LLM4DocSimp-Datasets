非确定型图灵机通常指的是确定型图灵机，但它在计算时与后者不同。非确定型图灵机有多种状态转移选择，会随机选择一种方案继续运行，直到停机。
其状态转移规则包括状态集合、字符集和读取头的左右移动规则。字符集的符号表示其所有子集。在确定当前状态和读取字符后，非确定型图灵机会随机选择一个子集操作，然后进行下一步计算。
不确定图灵机的计算过程可以表示成状态树。在这个树中，每个分支代表一种计算可能性。图灵机在某输入序列上能停止的条件是，只要有一个分支达到接受状态，就接受该输入序列；如果达到拒绝状态，就拒绝。值得注意的是，图灵机不能同时接受和拒绝同一个输入序列。

对于任意一个不确定机器，存在一个与之语言相等的确定机器。由于不确定机器的计算过程是计算树，因此理论上只需遍历这棵树就能模拟其计算过程。但直接使用深度优先遍历计算树不可行，因为有些计算分支可能永远不会停止。因此，我们可以使用一种称为迭代加深搜索算法的方法来遍历计算树。关于这种方法的具体证明，请参考以下内容：对于不确定型机器的表达式8，我们构造了确定型机器26。如果表达式8有能停机的分支，则26也能找到并停机。由此，我们得出结论。命题2表明：如果不确定型机器8能在多项式时间内接受语言L，那么存在一个P多项式。这个多项式使得语言L可以被时间复杂度为43的确定型机器程序接受。命题2说明了为什么在证明P=NP之前，所有的NPC问题都只有指数级算法。

