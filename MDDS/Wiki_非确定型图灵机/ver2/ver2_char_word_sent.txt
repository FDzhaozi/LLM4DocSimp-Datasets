非确定型图灵机通常指的是确定型图灵机。它与确定型图灵机不同，计算时机器有多种状态转移选择，会随机选择一种方案继续运行，直到停机。它的状态转移规则包括状态集合、字符集和读取头的左右移动规则。字符集的符号表示其所有子集。非确定型图灵机在当前状态和读取字符确定后，会随机选择一个子集操作，再进行下一步计算。

不确定图灵机的计算过程可以表示成状态树。树中的每个分支代表一种计算可能。只要有一个分支达到接受状态，就接受输入序列；达到拒绝状态，则拒绝。图灵机在某输入序列上能停止，条件是只要有一个分支进入接受或拒绝状态，即使有些分支可能永远无法停止。注意，图灵机必须无冲突，即不能同时接受和拒绝同一个输入序列。对于任意一个不确定图灵机，存在一个与之语言相等的确定图灵机。由于不确定图灵机的计算过程是状态树，因此只需遍历这棵树就能模拟其计算过程。想用深度优先遍历遍历状态树，但这不可行。因为有些计算分支可能永远不会停止！因此，我们可以使用一种在算法中称为迭代加深搜索方法来遍历状态树。具体证明如下：

对于不确定型机器的表达式8，构造确定型机器26。如果表达式8有能停机的分支，则26也能找到并停机。因此得出结论。命题2：如果不确定型机器8在多项式时间内接受语言L，则存在P多项式。该多项式使得语言L能被时间复杂为43的确定型机器程序接受。命题2说明了为什么在证明P = NP之前，所有的NPC问题都只有指数算法。

