非确定型图灵机如果不加特殊说明，通常所说的图灵机都是确定型图灵机。非确定型图灵机与确定型图灵机不同，因为计算过程中，机器根据当前状态和读写头读取的符号，有多种状态转移选择。机器会随机选择一种方案继续运行，直到停机。具体而言，其状态转移函数formula_2是状态集合，formula_3是字母表，formula_4分别表示读写头向左和向右移动；符号formula_5表示formula_6的幂集。例如，如果非确定型图灵机当前状态为formula_9，读写头所读符号为formula_10，则它将'任意地'选择一个formula_13，按其进行操作，然后进入下一步计算。

不确定型图灵机的计算步骤可以表示成状结构。状的每一分支代表一种计算可能性。图灵机只要有一个分支达到接受状态，就接受该输入串；达到拒绝状态，则拒绝。图灵机在某输入串上能停止的条件是，只要有些分支可能永远无法停止，只要有一个分支进入接受或拒绝状态即可。要注意的是，图灵机必须无矛盾，即不能同时接受和拒绝同一个输入串。对于任意一个不确定型图灵机，存在一个与之语言相等的确定型图灵机。因为不确定型图灵机的计算步骤是状结构，所以只需游历这棵状即可模拟其计算步骤。想用深度优先搜索游历计算状，但这不可行。因为有些计算分支可能永远不会停止！因此，我们可以使用一种在算法中称为迭代加深搜索的方法来游历计算状。具体证明如下：

对于非确定型机器的表达式8，构造确定型机器26。如果表达式8有可停机的分支，则26也能找到并停机。因此得出结论。命题2：如果非确定型机器8在多项式时间内接受语言L，则存在P多项式。该多项式使得语言L能被时间复杂度为43的确定型机器程序接受。命题2说明了为什么在证明P = NP之前，所有的NPC问题都只有指数级算法。

